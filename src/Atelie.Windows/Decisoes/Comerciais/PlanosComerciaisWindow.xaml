<Window
        x:Class="Atelie.Decisoes.Comerciais.PlanosComerciaisWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Atelie.Decisoes.Comerciais"
        xmlns:planos="clr-namespace:Atelie.Decisoes.Comerciais;assembly=Atelie.UI"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="Planos Comerciais" Height="795" Width="1193" Loaded="Window_Loaded"
    >
    <Window.Resources>
        <ResourceDictionary>
            <CollectionViewSource x:Key="planosComerciaisViewSource" d:DesignSource="{d:DesignInstance {x:Type planos:PlanoComercialViewModel}, CreateList=True}"/>
            <CollectionViewSource x:Key="custosViewSource" Source="{Binding Custos, Source={StaticResource planosComerciaisViewSource}}"/>
            <CollectionViewSource x:Key="itensViewSource" Source="{Binding Itens, Source={StaticResource planosComerciaisViewSource}}"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu VerticalAlignment="Top" Grid.ColumnSpan="2">
            <MenuItem Header="Registro">
                <MenuItem Header="Novo Plano Comercial ..."/>
                <Separator/>
                <MenuItem Header="Salvar" InputGestureText="Ctrl+S" Click="SaveButton_Click">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ContentSave" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Fechar"/>
            </MenuItem>
        </Menu>
        <ToolBar VerticalAlignment="Top" Grid.Row="1" Grid.ColumnSpan="2">
            <Button>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Novo Plano Comercial ..."/>
                </StackPanel>
            </Button>
            <Separator/>
            <Button x:Name="saveButton" ToolTip="Salvar" Click="SaveButton_Click">
                <materialDesign:PackIcon Kind="ContentSave" />
            </Button>
        </ToolBar>
        <Grid Grid.Row="2" DataContext="{StaticResource planosComerciaisViewSource}" Margin="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <DataGrid 
                x:Name="planosComerciaisDataGrid"
                ItemsSource="{Binding}"
                RowDetailsVisibilityMode="VisibleWhenSelected"
                EnableRowVirtualization="True"
                AutoGenerateColumns="False"
            >
                <DataGrid.RowValidationRules>
                    <local:PlanoComercialValidationRule ValidationStep="UpdatedValue"/>
                </DataGrid.RowValidationRules>
                <DataGrid.Columns>
                    <!--<DataGridTextColumn x:Name="idColumn" IsReadOnly="True" Header="Id" Binding="{Binding Id}"/>-->
                    <DataGridTextColumn x:Name="nomeColumn" Header="Nome" Binding="{Binding Nome, ValidatesOnExceptions=True}"/>
                    <DataGridTextColumn x:Name="rendaBrutaMensalColumn" Header="RBM (R$)" Binding="{Binding RendaBrutaMensal}"/>
                    <DataGridTextColumn x:Name="custoFixoTotalColumn" Header="CF (R$)" Binding="{Binding CustoFixoTotal, Mode=OneWay}"/>
                    <DataGridTextColumn x:Name="custoFixoPercentualTotalColumn" Header="CF (%)" Binding="{Binding CustoFixoPercentualTotal, Mode=OneWay}"/>
                    <DataGridTextColumn x:Name="custoVariavelTotalColumn" Header="CV (R$)" Binding="{Binding CustoVariavelTotal, Mode=OneWay}"/>
                    <DataGridTextColumn x:Name="custoVariavelPercentualTotalColumn" Header="CV (%)" Binding="{Binding CustoVariavelPercentualTotal, Mode=OneWay}"/>
                    <DataGridTextColumn x:Name="margemColumn" Header="M (R$)" Binding="{Binding Margem}"/>
                    <DataGridTextColumn x:Name="margemPercentualColumn" Header="M (%)" Binding="{Binding MargemPercentual, ValidatesOnNotifyDataErrors=True}"/>
                    <DataGridTextColumn x:Name="taxaDeMarcacaoColumn" Header="TM" Binding="{Binding TaxaDeMarcacao, Mode=OneWay, ValidatesOnNotifyDataErrors=True}"/>
                    <!--<DataGridTextColumn x:Name="stateColumn" IsReadOnly="True" Header="State" Binding="{Binding State}"/>-->
                </DataGrid.Columns>
            </DataGrid>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
            <Grid Grid.Column="2" Margin="0" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <GroupBox Header="Custos" Style="{StaticResource GroupBoxSplit}">
                    <StackPanel>
                        <ToolBar VerticalAlignment="Top">
                            <Button x:Name="adicionarCustoButton" Content="Adicionar Custo..." Click="AdicionarModeloButton_Click"/>
                        </ToolBar>
                        <DataGrid
                            x:Name="custosDataGrid"
                            ItemsSource="{Binding Source={StaticResource custosViewSource}}"
                            RowDetailsVisibilityMode="VisibleWhenSelected"
                            VerticalContentAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            EnableRowVirtualization="True"
                            AutoGenerateColumns="False"
                        >
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn x:Name="tipoColumn" SelectedValueBinding="{Binding Tipo}" Header="Tipo" Width="Auto" ItemsSource="{Binding Source={StaticResource TipoDeCusto}, Mode=OneWay}"/>
                                <DataGridTextColumn x:Name="descricaoColumn" Binding="{Binding Descricao}" Header="Descrição" Width="Auto"/>
                                <DataGridTextColumn x:Name="valorColumn" Binding="{Binding Valor}" Header="V (R$)" Width="Auto"/>
                                <DataGridTextColumn x:Name="percentualColumn" Binding="{Binding Percentual}" Header="P (%)" Width="Auto"/>
                                <DataGridTextColumn x:Name="valorCalculadoColumn" Binding="{Binding ValorCalculado}" Header="VC (R$)" Width="Auto"/>
                                <DataGridTextColumn x:Name="percentualCalculadoColumn" Binding="{Binding PercentualCalculado}" Header="PC (%)" Width="Auto"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </GroupBox>
                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" />
                <GroupBox Grid.Row="2" Header="Tabela de Preços" Style="{StaticResource GroupBoxSplit}">
                    <StackPanel>
                        <ToolBar VerticalAlignment="Top">
                            <Button x:Name="adicionarModeloButton" Content="Adicionar Modelo..." Click="AdicionarModeloButton_Click"/>
                        </ToolBar>
                        <DataGrid
                            x:Name="itensDataGrid"
                            ItemsSource="{Binding Source={StaticResource itensViewSource}}"
                            RowDetailsVisibilityMode="VisibleWhenSelected"
                            VerticalContentAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            EnableRowVirtualization="True"
                            AutoGenerateColumns="False"
                            CanUserAddRows="False"
                        >
                            <DataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <GroupBox Header="Recursos" Style="{StaticResource GroupBoxSplit}">
                                        <DataGrid
                                            Height="Auto"
                                            ItemsSource="{Binding ElementName=itensDataGrid, Path=SelectedItem.Modelo.Recursos}"
                                            RowDetailsVisibilityMode="VisibleWhenSelected"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            EnableRowVirtualization="True"
                                            AutoGenerateColumns="False"
                                        >
                                            <DataGrid.Columns>
                                                <DataGridComboBoxColumn Header="Tipo" SelectedValueBinding="{Binding Tipo}" Width="Auto" ItemsSource="{Binding Source={StaticResource TipoDeRecurso}, Mode=OneWay}"/>
                                                <DataGridTextColumn Header="Descrição" Binding="{Binding Descricao}" Width="Auto" />
                                                <DataGridTextColumn Header="C (R$)" Binding="{Binding Custo}" Width="Auto" />
                                                <DataGridTextColumn Header="Unidades" Binding="{Binding Unidades}" Width="Auto" />
                                                <DataGridTextColumn Header="C/U (R$)" Binding="{Binding CustoPorUnidade, Mode=OneWay}" Width="Auto" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </GroupBox>
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>
                            <DataGrid.Columns>
                                <!--<DataGridTextColumn x:Name="planoComercialIdColumn" Binding="{Binding PlanoComercialId}" Header="PCI" Width="Auto"/>-->
                                <DataGridTextColumn x:Name="custoDeProducaoColumn" Binding="{Binding CustoDeProducao, Mode=OneWay}" Header="CP (R$)" Width="Auto"/>
                                <DataGridTextColumn x:Name="CustoDeProducaoSugeridoColumn" Binding="{Binding CustoDeProducaoSugerido, Mode=OneWay}" Header="CPS (R$)" Width="Auto"/>
                                <DataGridTextColumn x:Name="modeloColumn" Binding="{Binding Modelo.Nome, Mode=OneWay}" Header="Modelo" Width="Auto"/>
                                <DataGridTextColumn x:Name="precoDeVendaColumn" Binding="{Binding PrecoDeVenda, Mode=OneWay}" Header="PV (R$)" Width="Auto"/>
                                <DataGridTextColumn x:Name="PrecoDeVendaDesejadoColumn" Binding="{Binding PrecoDeVendaDesejado}" Header="PVD (R$)" Width="Auto"/>
                                <!--<DataGridTextColumn x:Name="stateColumn1" Binding="{Binding State}" Header="State" IsReadOnly="True" Width="Auto"/>-->
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </GroupBox>
            </Grid>
        </Grid>
        <StatusBar Grid.Row="3" VerticalAlignment="Bottom" Grid.ColumnSpan="2">
            <Label x:Name="statusBarLabel" Content="Pronto."/>
        </StatusBar>
    </Grid>
</Window>
