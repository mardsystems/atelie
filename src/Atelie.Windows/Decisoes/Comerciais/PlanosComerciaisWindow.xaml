<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Atelie.Decisoes.Comerciais"
        xmlns:planos="clr-namespace:Atelie.Decisoes.Comerciais;assembly=Atelie.UI" x:Class="Atelie.Decisoes.Comerciais.PlanosComerciaisWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="Planos Comerciais" Height="795" Width="1193" Loaded="Window_Loaded"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"    
    >
    <Window.Resources>
        <CollectionViewSource x:Key="planoComercialViewModelViewSource" d:DesignSource="{d:DesignInstance {x:Type planos:PlanoComercialViewModel}, CreateList=True}"/>
        <CollectionViewSource x:Key="planoComercialViewModelItensViewSource" Source="{Binding Itens, Source={StaticResource planoComercialViewModelViewSource}}"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Menu VerticalAlignment="Top">
            <MenuItem Header="Sistema"/>
        </Menu>
        <ToolBar VerticalAlignment="Top" Grid.Row="1">
            <Button Content="Novo Fabricante..."/>
            <Button x:Name="saveButton" Content="Salvar" Click="SaveButton_Click"/>
        </ToolBar>
        <Grid Grid.Row="2" DataContext="{StaticResource planoComercialViewModelViewSource}" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <DataGrid x:Name="planoComercialViewModelDataGrid" RowDetailsVisibilityMode="VisibleWhenSelected" ItemsSource="{Binding}" EnableRowVirtualization="True" AutoGenerateColumns="False" FontFamily="Calibri" HorizontalGridLinesBrush="#FF8EA9DB" VerticalGridLinesBrush="#FFD4D4D4" FontSize="14">
                <!--<DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground" Value="#FFD9E1F2" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="FontWeight"  Value="Bold" />
                        <Setter Property="Background" Value="#FF4472C4" />
                        <Setter Property="Foreground" Value="White"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>-->
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="idColumn" IsReadOnly="True" Header="Id" Binding="{Binding Id}"/>
                    <DataGridTextColumn x:Name="nomeColumn" Header="Nome" Binding="{Binding Nome}"/>
                    <DataGridTextColumn x:Name="rendaBrutaMensalColumn" Header="RBM (R$)" Binding="{Binding RendaBrutaMensal}"/>
                    <DataGridTextColumn x:Name="custoFixoColumn" Header="CF (R$)" Binding="{Binding CustoFixo}"/>
                    <DataGridTextColumn x:Name="custoFixoPercentualColumn" Header="CF (%)" Binding="{Binding CustoFixoPercentual}"/>
                    <DataGridTextColumn x:Name="custoVariavelColumn" Header="CV (R$)" Binding="{Binding CustoVariavel}"/>
                    <DataGridTextColumn x:Name="custoPercentualColumn" Header="CV (%)" Binding="{Binding CustoPercentual}"/>
                    <DataGridTextColumn x:Name="margemColumn" Header="M (R$)" Binding="{Binding Margem}"/>
                    <DataGridTextColumn x:Name="margemPercentualColumn" Header="M (%)" Binding="{Binding MargemPercentual}"/>
                    <DataGridTextColumn x:Name="taxaDeMarcacaoColumn" Header="TM" Binding="{Binding TaxaDeMarcacao}"/>
                    <DataGridTextColumn x:Name="stateColumn" IsReadOnly="True" Header="State" Binding="{Binding State}"/>
                </DataGrid.Columns>
            </DataGrid>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
            <GroupBox Grid.Column="2" Header="Tabela de Preços">
                <DataGrid x:Name="itensDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource planoComercialViewModelItensViewSource}}" RowDetailsVisibilityMode="VisibleWhenSelected" FontFamily="Calibri" HorizontalGridLinesBrush="#FF8EA9DB" VerticalGridLinesBrush="#FFD4D4D4" FontSize="14" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    <!--<DataGrid.Style>
                        <Style TargetType="{x:Type DataGrid}">
                            <Setter Property="AlternatingRowBackground" Value="#FFD9E1F2" />
                        </Style>
                    </DataGrid.Style>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontWeight"  Value="Bold" />
                            <Setter Property="Background" Value="#FF4472C4" />
                            <Setter Property="Foreground" Value="White"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>-->
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="planoComercialIdColumn" Binding="{Binding PlanoComercialId}" Header="PCI" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="custoDeProducaoValorColumn" Binding="{Binding CustoDeProducaoValor}" Header="CP (R$)" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="modeloCodigoColumn" Binding="{Binding ModeloCodigo}" Header="Modelo" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="modeloNomeColumn" Binding="{Binding ModeloNome}" Header="Modelo Nome" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="precoDeVendaColumn" Binding="{Binding PrecoDeVenda}" Header="PV (R$)" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="stateColumn1" Binding="{Binding State}" Header="State" IsReadOnly="True" Width="SizeToHeader"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
        </Grid>
        <StatusBar Grid.Row="3" VerticalAlignment="Bottom">
            <Label Content="Pronto."/>
        </StatusBar>
    </Grid>
</Window>
